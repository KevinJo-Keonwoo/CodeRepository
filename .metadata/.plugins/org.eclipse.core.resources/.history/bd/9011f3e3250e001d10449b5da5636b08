package com.my.control;

import static org.hamcrest.CoreMatchers.is;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.test.context.web.WebAppConfiguration;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.ResultActions;
import org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder;
import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;
import org.springframework.test.web.servlet.result.MockMvcResultMatchers;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;
import org.springframework.web.context.WebApplicationContext;
@RunWith(SpringRunner.class)
@ContextConfiguration(locations = {"file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml"})
//WebApplicationContext타입의 컨테이너가 구동되도록 아래 설정 추가해야함 
@WebAppConfiguration
public class BoardControllerTest {
	@Autowired
	private WebApplicationContext context;
	
	private MockMvc mockMvc; //컨트롤러 테스트용 모의객체 
	
	@Before
	public void setup() {
		mockMvc = MockMvcBuilders.webAppContextSetup(context).build();

	}
	@Test
	public void testList() throws Exception {
	//게시글 페이지별 목록 테스트 
		String uri = "/boardlist"; //http://localhost:8888/backboard/
		MockHttpServletRequestBuilder  mockRequestBuilder =
				MockMvcRequestBuilders.get(uri).accept("application/json");  //org.springframework.http.MediaType.APPLICATION_JSON);
																			//두방법 모두 가능 
		mockRequestBuilder.param("currentPage", "2"); //요청전달데이터는 무조건 String 타입이어야함 
		//응답정보 : ResultActions
		ResultActions resultActions = mockMvc.perform(mockRequestBuilder);
		resultActions.andExpect(MockMvcResultMatchers.status().isOk()); //응답상태코드200번 성공 예상
		resultActions.andExpect(jsonPath("status",is(1)));//json객체의 status프로퍼티값이 1 예상
//		resultActions.andExpect(jsonPath("t");
	}

}
